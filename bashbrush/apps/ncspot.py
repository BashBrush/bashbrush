from __future__ import annotations
from pathlib import Path
from typing import List, Tuple
from bashbrush.core.palette import ensure_16, rgb_to_hex
from bashbrush.core.config import update_config
from bashbrush.settings import Paths

def apply_theme(palette: List[Tuple[int,int,int]], wallpaper_path: Path, paths: Paths) -> None:
    print("\n--- Processing ncspot ---")
    paths.ncspot_themes.mkdir(parents=True, exist_ok=True)
    normal, brights = ensure_16(palette)
    name_map = ["black","red","green","yellow","blue","magenta","cyan","white"]

    theme_lines = [
        f"# ncspot theme generated by BashBrush for {wallpaper_path.name}",
        "[colors.primary]",
        f"background = '{rgb_to_hex(palette[0])}'",
        f"foreground = '{rgb_to_hex(palette[-1])}'",
        "",
        "[colors.normal]"
    ]
    for i, c in enumerate(normal):
        theme_lines.append(f"{name_map[i]} = '{rgb_to_hex(c)}'")
    theme_lines += ["", "[colors.bright]"]
    for i, c in enumerate(brights):
        theme_lines.append(f"{name_map[i]} = '{rgb_to_hex(c)}'")

    theme_filename = wallpaper_path.stem + ".toml"
    theme_path = (paths.ncspot_themes / theme_filename).resolve()
    theme_path.write_text("\n".join(theme_lines) + "\n", encoding="utf-8")
    print(f"Exported ncspot theme to: {theme_path}")

    update_config(
        paths.ncspot_config,
        f"general.import = [\"{theme_path}\"]\n",
        r"^\s*general\.import\s*="
    )
